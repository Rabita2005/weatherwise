Weatherwise Project Reflection
- Student Name: Rabita Sami
- Student ID: 21584307

Coming from a non-technical background and building the Weatherwise application has honestly been one of the most rewarding and challenging experiences of my learning so far. At first, I felt completely out of my depth and here were so many moving parts, such as APIs, Python functions, error handling, visualisations, and even natural language processing. But I slowly started working on one-by-one part and things got easier within time.
One of the first decisions I made was choosing how to source the weather data. I explored three different options and weighed them up based on how complex they were and how much control I’d have and what I could learn from each. I ended up going with the direct wttr.in API option because it allowed me to really dig into raw JSON data and understand how real-world API responses work. It wasn’t always smooth since there there were bugs, weird formatting issues, and even some confusing errors but I learnt how to troubleshoot them which I think is just as important as writing code in the first place.
Throughout the project, I relied on AI like ChatGPT and Co-pilot to support me almost like a mentor who was available 24/7. I didn’t just ask for answers. I asked for code to be explained, challenged it to improve its suggestions, and made sure I understood why something worked before moving on. I also used to prompt techniques like breaking big problems down, asking for pseudocode first, and checking how the code would handle edge cases like invalid cities or missing data. This process gave me the confidence to take ownership of the final product.
I’m proud of how user-friendly the app turned out. The mix of a menu-driven interface with charts and smart natural language responses makes it feel polished like something that could be used. It’s clean, responsive, and doesn’t only just show data but also tells a story about the weather.
If I had more time, I would’ve loved to turn it into a web app with tools like Streamlit, or add comparison features between multiple cities. But even as it stands, this project has changed how I think about tech. It’s shown me that learning to code isn’t about being perfect rather it’s about being curious and willing to ask the right questions. Looking back, I never would’ve thought I could build something like this. But I did and it feels amazing.

